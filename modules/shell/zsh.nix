{ options, config, pkgs, lib, ... }:

with lib;
with lib.my;
let cfg = config.modules.shell.zsh;
in {
  options.modules.shell.zsh = with types; {
    enable = mkBoolOpt false;

    aliases = mkOpt (attrsOf (either str path)) { };

    rcInit = mkOpt' lines "" ''
      Zsh lines to be written to $XDG_CONFIG_HOME/zsh/extra.zshrc and sourced by
      $XDG_CONFIG_HOME/zsh/.zshrc
    '';
    envInit = mkOpt' lines "" ''
      Zsh lines to be written to $XDG_CONFIG_HOME/zsh/extra.zshenv and sourced by
      $XDG_CONFIG_HOME/zsh/.zshenv
    '';
    rcFiles = mkOpt (listOf (either str path)) [ ];
    envFiles = mkOpt (listOf (either str path)) [ ];
  };

  config = mkIf cfg.enable {
    users.defaultUserShell = pkgs.zsh;

    programs.zsh = {
      enable = true;
      enableCompletion = true;
      # Set to false and init myself is some commands don't have completions
      enableGlobalCompInit = true;
      promptInit = "";
    };

    user.packages = with pkgs; [
      zsh
      nix-zsh-completions
      bat
      exa
      fd
      fzf
      ripgrep
    ];

    env = {
      ZDOTDIR = "$XDG_CONFIG_HOME/zsh";
      ZSH_CACHE = "$XDG_CACHE_HOME/zsh";
      ZGEN_DIR = "$XDG_DATA_HOME/zsh";
      ZGEN_SOURCE = "$ZGEN_DIR/zgen.zsh";
    };

    home.configFile = {
      "zsh" = {
        source = "${configDir}/zsh";
        recursive = true;
      };

      "zsh/extra.zshrc".text = let
        aliasLines = mapAttrsToList (n: v: ''alias ${n}="${v}"'') cfg.aliases;
      in ''
        # This file was autogenerated, do not edit it !
        ${concatStringsSep "\n" aliasLines}
                  ${
                    concatMapStrings (path: ''
                      source '${path}'
                    '') cfg.rcFiles
                  }
                  ${cfg.rcInit}
      '';

      "zsh/extra.zshenv".text = ''
        # This file was autogenerated, do not edit it !
        ${concatMapStrings (path: ''
          source '${path}'
        '') cfg.envFiles}
                ${cfg.envInit}
      '';
    };

    system.userActivationScripts.cleanupZgen = "rm -fv $XDG_CACHE_HOME/zsh/*";
  };
}
